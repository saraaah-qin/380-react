[{"/Users/sarahqin/Documents/GitHub/assignment-06-lotion-saraaah-qin/src/index.js":"1","/Users/sarahqin/Documents/GitHub/assignment-06-lotion-saraaah-qin/src/reportWebVitals.js":"2","/Users/sarahqin/Documents/GitHub/assignment-06-lotion-saraaah-qin/src/Nav.js":"3","/Users/sarahqin/Documents/GitHub/assignment-06-lotion-saraaah-qin/src/App.js":"4","/Users/sarahqin/Documents/GitHub/assignment-06-lotion-saraaah-qin/src/Sidebar.js":"5","/Users/sarahqin/Documents/GitHub/assignment-06-lotion-saraaah-qin/src/Edit.js":"6","/Users/sarahqin/Documents/GitHub/assignment-06-lotion-saraaah-qin/src/View.js":"7"},{"size":896,"mtime":1678311847064,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1677528753816,"results":"10","hashOfConfig":"9"},{"size":440,"mtime":1678171746136,"results":"11","hashOfConfig":"9"},{"size":3286,"mtime":1678316321332,"results":"12","hashOfConfig":"9"},{"size":1492,"mtime":1678316932954,"results":"13","hashOfConfig":"9"},{"size":1772,"mtime":1678310931642,"results":"14","hashOfConfig":"9"},{"size":1656,"mtime":1678309098715,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"20"},"qiw8m0",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"20"},"/Users/sarahqin/Documents/GitHub/assignment-06-lotion-saraaah-qin/src/index.js",["41"],[],"import {\n  BrowserRouter,\n  Routes,\n  Route,\n  useSearchParams,\n} from \"react-router-dom\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<App state=\"none\" />}></Route>\n        <Route path=\"/notes/:id/edit\" element={<App state=\"edit\" />}></Route>\n        <Route path=\"/notes/:id\" element={<App state=\"view\" />}></Route>\n      </Routes>\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",[],"/Users/sarahqin/Documents/GitHub/assignment-06-lotion-saraaah-qin/src/reportWebVitals.js",[],[],"/Users/sarahqin/Documents/GitHub/assignment-06-lotion-saraaah-qin/src/Nav.js",[],[],"/Users/sarahqin/Documents/GitHub/assignment-06-lotion-saraaah-qin/src/App.js",["42"],[],"/Users/sarahqin/Documents/GitHub/assignment-06-lotion-saraaah-qin/src/Sidebar.js",["43"],[],"/Users/sarahqin/Documents/GitHub/assignment-06-lotion-saraaah-qin/src/Edit.js",["44"],[],"import React, { useState, useRef } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Edit({ notes, onDeleteNote, activeNote, editNote, edit, setEdit }) {\n  const [value, setValue] = useState(activeNote.body);\n  const [title, setTitle] = useState(activeNote.title);\n  const [date, setDate] = useState(activeNote.date);\n\n  const navigate = useNavigate();\n  // const { id } = useParams();\n\n  const savedNote = () => {\n    activeNote.title = title;\n    activeNote.body = value;\n    activeNote.date = date;\n    navigate(`/notes/` + activeNote.id);\n  };\n\n  if (!activeNote) {\n    return <div className=\"no-notes\"> Select a note, or create a new one</div>;\n  }\n  return (\n    <div className=\"main-nav\">\n      <div className=\"note-edit\">\n        <div className=\"with-buttons\">\n          <div className=\"title-date\">\n            <input\n              id=\"text-title\"\n              type=\"text\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n            />\n            <input\n              type=\"datetime-local\"\n              value={date}\n              onChange={(e) => setDate(e.target.value)}\n            />\n          </div>\n          <div className=\"buttons\">\n            <button onClick={savedNote}>Save</button>\n            <button onClick={() => onDeleteNote(activeNote.id)}>Delete</button>\n          </div>\n        </div>\n      </div>\n      <div className=\"quill-container\">\n        <ReactQuill\n          className=\"quill-editor\"\n          theme=\"snow\"\n          placeholder=\"Your Note Here\"\n          value={value}\n          onChange={setValue}\n          readOnly={false}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Edit;\n","/Users/sarahqin/Documents/GitHub/assignment-06-lotion-saraaah-qin/src/View.js",["45"],[],"import React, { useState } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction View({ notes, onDeleteNote, activeNote, editNote, edit, setEdit }) {\n  //   const { id } = useParams();\n  const navigate = useNavigate();\n  if (!activeNote) {\n    return <div className=\"no-notes\"> Select a note, or create a new one</div>;\n  }\n\n  const options = {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n  };\n\n  const formatDate = (when) => {\n    const formatted = new Date(when).toLocaleString(\"en-US\", options);\n    if (formatted === \"Invalid Date\") {\n      return \"\";\n    }\n    return formatted;\n  };\n\n  return (\n    <div className=\"main-nav\">\n      <div className=\"note-edit\">\n        <div className=\"with-buttons\">\n          <div className=\"title-date\">\n            <input id=\"text-title\" type=\"text\" value={activeNote.title} />\n            <p> {formatDate(activeNote.date)} </p>\n          </div>\n          <div className=\"buttons\">\n            <button\n              onClick={() => {\n                navigate(`/notes/` + activeNote.id + `/edit`);\n              }}\n            >\n              Edit\n            </button>\n            <button onClick={() => onDeleteNote(activeNote.id)}>Delete</button>\n          </div>\n        </div>\n      </div>\n      <div className=\"quill-container\">\n        <ReactQuill\n          className=\"quill-editor\"\n          theme=\"snow\"\n          id=\"toolbar\"\n          value={activeNote.body}\n          readOnly={true}\n        />\n      </div>\n    </div>\n  );\n}\nexport default View;\n",{"ruleId":"46","severity":1,"message":"47","line":5,"column":3,"nodeType":"48","messageId":"49","endLine":5,"endColumn":18},{"ruleId":"46","severity":1,"message":"50","line":28,"column":11,"nodeType":"48","messageId":"49","endLine":28,"endColumn":13},{"ruleId":"46","severity":1,"message":"51","line":1,"column":23,"nodeType":"48","messageId":"49","endLine":1,"endColumn":32},{"ruleId":"46","severity":1,"message":"52","line":1,"column":27,"nodeType":"48","messageId":"49","endLine":1,"endColumn":33},{"ruleId":"46","severity":1,"message":"53","line":1,"column":17,"nodeType":"48","messageId":"49","endLine":1,"endColumn":25},"no-unused-vars","'useSearchParams' is defined but never used.","Identifier","unusedVar","'id' is assigned a value but never used.","'useParams' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used."]