{"ast":null,"code":"var _jsxFileName = \"/Users/sarahqin/Documents/GitHub/assignment-06-lotion-saraaah-qin/src/App.js\",\n  _s = $RefreshSig$();\n// import {\n//   BrowserRouter,\n//   Routes,\n//   Route,\n//   useSearchParams,\n// } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport uuid from \"react-uuid\";\nimport Main from \"./Main\";\nimport Nav from \"./Nav\";\nimport Sidebar from \"./Sidebar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [activeNote, setActiveNote] = useState(false);\n\n  //   const [savedNote, setSavedNote] = useState(false);\n\n  const onAddNote = () => {\n    const newNote = {\n      id: uuid(),\n      title: \"Untitled\",\n      //   date: \"\",\n      body: \"...\"\n    };\n    const currentPath = window.location.pathname;\n    const newPath = \"${currentPath}/'${note.id}\";\n    window.location.href = newPath;\n    setNotes([newNote, ...notes]);\n  };\n  const onDeleteNote = deleteID => {\n    const answer = window.confirm(\"Are you sure?\");\n    if (answer) {\n      setNotes(notes.filter(note => note.id !== deleteID));\n    }\n  };\n  const getActiveNote = () => {\n    return notes.find(note => note.id === activeNote);\n  };\n  const editNote = updatedNote => {\n    const updatedNotesList = notes.map(note => {\n      if (note.id === activeNote) {\n        return updatedNote;\n      }\n      return note;\n    });\n    setNotes(updatedNotesList);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-header\",\n      children: /*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        notes: notes,\n        onAddNote: onAddNote,\n        activeNote: activeNote,\n        setActiveNote: setActiveNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        notes: notes,\n        onDeleteNote: onDeleteNote,\n        activeNote: getActiveNote(),\n        editNote: editNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this)\n\n  // <BrowserRouter>\n  //   <Routes>\n  //     <Route path=\"/notes\" element={<Main />}></Route>\n  //     <Route path=\"/edits\" element={<Sidebar />}></Route>\n  //   </Routes>\n  // </BrowserRouter>\n  ;\n}\n_s(App, \"gB5omx9RPH1kLpQQ78qO3OWf5pg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","uuid","Main","Nav","Sidebar","jsxDEV","_jsxDEV","App","_s","notes","setNotes","activeNote","setActiveNote","onAddNote","newNote","id","title","body","currentPath","window","location","pathname","newPath","href","onDeleteNote","deleteID","answer","confirm","filter","note","getActiveNote","find","editNote","updatedNote","updatedNotesList","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sarahqin/Documents/GitHub/assignment-06-lotion-saraaah-qin/src/App.js"],"sourcesContent":["// import {\n//   BrowserRouter,\n//   Routes,\n//   Route,\n//   useSearchParams,\n// } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport uuid from \"react-uuid\";\nimport Main from \"./Main\";\nimport Nav from \"./Nav\";\nimport Sidebar from \"./Sidebar\";\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n\n  const [activeNote, setActiveNote] = useState(false);\n\n  //   const [savedNote, setSavedNote] = useState(false);\n\n  const onAddNote = () => {\n    const newNote = {\n      id: uuid(),\n      title: \"Untitled\",\n      //   date: \"\",\n      body: \"...\",\n    };\n    const currentPath = window.location.pathname;\n    const newPath = \"${currentPath}/'${note.id}\";\n    window.location.href = newPath;\n    setNotes([newNote, ...notes]);\n  };\n\n  const onDeleteNote = (deleteID) => {\n    const answer = window.confirm(\"Are you sure?\");\n    if (answer) {\n      setNotes(notes.filter((note) => note.id !== deleteID));\n    }\n  };\n\n  const getActiveNote = () => {\n    return notes.find((note) => note.id === activeNote);\n  };\n\n  const editNote = (updatedNote) => {\n    const updatedNotesList = notes.map((note) => {\n      if (note.id === activeNote) {\n        return updatedNote;\n      }\n      return note;\n    });\n\n    setNotes(updatedNotesList);\n  };\n\n  return (\n    <div className=\"main\">\n      <div className=\"header-header\">\n        <Nav />\n      </div>\n\n      <div className=\"App\">\n        <Sidebar\n          notes={notes}\n          onAddNote={onAddNote}\n          activeNote={activeNote}\n          setActiveNote={setActiveNote}\n        />\n        <Main\n          notes={notes}\n          onDeleteNote={onDeleteNote}\n          activeNote={getActiveNote()}\n          editNote={editNote}\n        />\n      </div>\n    </div>\n\n    // <BrowserRouter>\n    //   <Routes>\n    //     <Route path=\"/notes\" element={<Main />}></Route>\n    //     <Route path=\"/edits\" element={<Sidebar />}></Route>\n    //   </Routes>\n    // </BrowserRouter>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}