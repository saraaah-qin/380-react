{"ast":null,"code":"var _jsxFileName = \"/Users/sarahqin/Documents/GitHub/assignment-06-lotion-saraaah-qin/src/Main.js\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main(_ref) {\n  _s2();\n  var _s = $RefreshSig$();\n  let {\n    notes,\n    onDeleteNote,\n    activeNote,\n    editNote\n  } = _ref;\n  const [value, setValue] = useState(\"Your Note Here\");\n  const [editorValue, setEditorValue] = useState(\"\");\n  const options = {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\"\n  };\n  const formatDate = when => {\n    const formatted = new Date(when).toLocaleString(\"en-US\", options);\n    if (formatted === \"Invalid Date\") {\n      return \"\";\n    }\n    return formatted;\n  };\n  const editField = editValue => {\n    _s();\n    editNote({\n      id: activeNote.id,\n      title: editValue,\n      body: editorValue\n    });\n    const bodyChange = newValue => {\n      setValue(newValue);\n    };\n    const handleSave = () => {\n      setValue(editorValue);\n      editNote({\n        id: activeNote.id,\n        title: activeNote.title,\n        body: editorValue\n      });\n    };\n    useEffect(() => {\n      setEditorValue(value);\n    }, [value]);\n    if (!activeNote) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-notes\",\n        children: \" Select a note, or create a new one\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-nav\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-edit\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"with-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title-date\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"text-title\",\n              type: \"text\",\n              value: activeNote.title,\n              onChange: e => editField(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"datetime-local\",\n              value: formatDate()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSave,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => onDeleteNote(activeNote.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n          theme: \"snow\",\n          value: editValue,\n          onChange: bodyChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  };\n  _s(editField, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n}\n_s2(Main, \"vIb3lcbhBVvhMQNJaeDZEc4tEV8=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","ReactQuill","jsxDEV","_jsxDEV","Main","_ref","_s2","_s","$RefreshSig$","notes","onDeleteNote","activeNote","editNote","value","setValue","editorValue","setEditorValue","options","year","month","day","hour","minute","formatDate","when","formatted","Date","toLocaleString","editField","editValue","id","title","body","bodyChange","newValue","handleSave","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","onClick","theme","_c","$RefreshReg$"],"sources":["/Users/sarahqin/Documents/GitHub/assignment-06-lotion-saraaah-qin/src/Main.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\n\nfunction Main({ notes, onDeleteNote, activeNote, editNote }) {\n  const [value, setValue] = useState(\"Your Note Here\");\n  const [editorValue, setEditorValue] = useState(\"\");\n\n  const options = {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n  };\n\n  const formatDate = (when) => {\n    const formatted = new Date(when).toLocaleString(\"en-US\", options);\n    if (formatted === \"Invalid Date\") {\n      return \"\";\n    }\n    return formatted;\n  };\n\n  const editField = (editValue) => {\n    editNote({\n      id: activeNote.id,\n      title: editValue,\n      body: editorValue,\n    });\n\n    const bodyChange = (newValue) => {\n      setValue(newValue);\n    };\n\n    const handleSave = () => {\n      setValue(editorValue);\n      editNote({\n        id: activeNote.id,\n        title: activeNote.title,\n        body: editorValue,\n      });\n    };\n\n    useEffect(() => {\n      setEditorValue(value);\n    }, [value]);\n\n    if (!activeNote) {\n      return (\n        <div className=\"no-notes\"> Select a note, or create a new one</div>\n      );\n    }\n\n    return (\n      <div className=\"main-nav\">\n        <div className=\"note-edit\">\n          <div className=\"with-buttons\">\n            <div className=\"title-date\">\n              <input\n                id=\"text-title\"\n                type=\"text\"\n                value={activeNote.title}\n                onChange={(e) => editField(e.target.value)}\n              />\n              <input type=\"datetime-local\" value={formatDate()} />\n            </div>\n            <div className=\"buttons\">\n              <button onClick={handleSave}>Save</button>\n              <button onClick={() => onDeleteNote(activeNote.id)}>\n                Delete\n              </button>\n            </div>\n          </div>\n          <ReactQuill theme=\"snow\" value={editValue} onChange={bodyChange} />\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default Main;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}